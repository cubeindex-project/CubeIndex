name: CI

on:
  push:
    branches: [main] # Run on pushes to main
  pull_request: # Run checks on PRs

permissions:
  contents: write # Needed for tagging + creating releases

# Cancel older runs on the same branch if new commits arrive
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/Paris # Timezone for version date

    steps:
      # Fetch repo (full history so tags can be pushed cleanly)
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install Node.js and cache npm packages
      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      # Install dependencies from package-lock.json
      - name: Install deps
        run: npm ci

      # Compute version string and inject into package.json
      - name: Set version
        id: version
        shell: bash
        run: |
          DATE="$(date +'%Y.%m.%d')"
          SHORT_SHA="${GITHUB_SHA::7}"
          VERSION="$DATE-$SHORT_SHA"

          # Update package.json without creating a git tag/commit
          npm version "$VERSION" --no-git-tag-version

          # Outputs for later steps
          echo "DATE=$DATE" >> "$GITHUB_OUTPUT"
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
          # Environment variable so SvelteKit/Vite can read PUBLIC_BUILD_VERSION
          echo "PUBLIC_BUILD_VERSION=$VERSION" >> "$GITHUB_ENV"

      # Run the build
      - name: Build
        run: npm run build

      # Create a Git tag (same as version string) and push it
      - name: Create tag
        run: |
          git tag "${{ steps.version.outputs.VERSION }}"
          git push origin "${{ steps.version.outputs.VERSION }}"

      # Create a GitHub Release for this tag
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: ${{ steps.version.outputs.VERSION }}
          body: |
            Automated build for ${{ steps.version.outputs.VERSION }}.
            - Commit: ${{ github.sha }}
            - Date (Europe/Paris): ${{ steps.version.outputs.DATE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
